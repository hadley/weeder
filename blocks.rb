require 'pathname'
require 'Date'
require 'FileUtils'

class Block
	attr_accessor :content, :cache_path
	
	def initialize(content, cache_path) 
		self.content = content
		self.cache_path = cache_path
	end
	
	#R code generated by this block
	def r_code
		%{\n##{self}\n} + content + "\n"
	end
	
	def latex_code
	end
	
	#Manipulate R code content to be prettier
	def content
		@content.gsub(/^\s*/, "") 
	end
	
	def filename
		hash.to_s(36)
	end

	def cache_file
		cache_path + (filename + ".txt")
	end
	
	def cached?
		File.exists? cache_file
	end
end

class LatexBlock < Block
	def r_code
		%{\n##{self}\nsink(file = "#{cache_file}")\n} + content + "\nsink()\n" unless cached?
	end
	
	def latex_code
		cache_file.read if cached?
	end
end

class RBlock < LatexBlock
	def latex_code
		"\\begin{verbatim}\n" + content + "\n\n" + cache_file.read.gsub(/^ /m, "") + "\\end{verbatim}"
	end
end

class GraphicBlock < Block
	def cache_file
		cache_path + (filename + ".pdf")
	end
	
	def r_code
		%{\n##{self}\npdf(file = "#{cache_file}", width=weaver.width, height=weaver.height)\n} + content + "\ndev.off()\n" unless cached?
	end
	def latex_code
		"\\includegraphics{#{cache_file}}"
	end
end